{"version":3,"sources":["components/header/index.js","components/contentHeader/index.js","components/products/productItems.js","components/products/index.js","components/drawer/index.js","components/cartItem/index.js","components/filterCurrency/index.js","containers/App/index.js","reportWebVitals.js","config/client.js","index.js"],"names":["Header","props","className","id","ShoppingCartOutlined","onClick","openDrawerCart","noOfItemInCart","ContentHeader","component","ProductItem","src","content","image_url","alt","loading","title","price","toLocaleString","style","currency","selectedCurrency","addProductToCart","Products","productArr","products","map","item","Option","Select","DrawerComponent","onCloseDrawer","openCart","cartList","totalAmount","countriesCode","onSelectedCurrency","placement","closable","onClose","visible","RightCircleOutlined","defaultValue","onChange","e","country","i","value","length","type","size","CartListItem","data","removeItemFromCart","increaseItemQuantity","reduceItemFromCart","CloseOutlined","icon","PlusOutlined","quantity","MinusOutlined","FilterSelectComponent","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","App","useState","setOpenCart","setCartList","setSelectedCurrency","itemPrice","setItemPrice","setTotalAmount","FETCH_PRODUCTS","gql","FETCH_CURRENCY","useQuery","error","currencyRes","console","log","getTotalAmount","useCallback","tAmount","x","useEffect","undefined","newItemPrice","product_i","val","filter","list","index","findIndex","cart","update","$merge","newObj","$push","$splice","$set","onFilterCurrency","indicator","LoadingOutlined","fontSize","color","spin","status","subTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","defaultOptions","query","errorPolicy","mutate","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"qOAgCeA,EA7BA,SAACC,GACd,OACE,yBAAQC,UAAU,oBAAlB,UACE,sBAAKA,UAAU,6BAAf,UACE,mBAAGC,GAAG,gBAAN,mBAEA,sBAAKD,UAAU,oBAAf,UACE,qCACA,4CAIJ,sBAAKA,UAAU,8BAAf,UACE,sBAAMC,GAAG,iBAAT,qBAEA,sBAAKA,GAAG,gBAAR,UACE,cAACC,EAAA,EAAD,CACED,GAAG,OACHE,QAAS,kBAAMJ,EAAMK,oBAEG,IAAzBL,EAAMM,gBACL,mBAAGJ,GAAG,oBAAN,SAA2BF,EAAMM,2BCP9BC,EAfO,SAACP,GACrB,OACE,qBAAKC,UAAU,2BAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,gCACE,mBAAGC,GAAG,wCAAN,0BACA,0DAGF,8BAAMF,EAAMQ,kBCgBLC,EA1BK,SAACT,GACnB,OACE,sBAAKC,UAAU,oBAA2C,cAAY,eAAtE,UAEE,qBAAKA,UAAU,iBAAf,SACE,qBAAKS,IAAKV,EAAMW,QAAQC,UAAWC,IAAI,YAAYC,QAAQ,WAG7D,mBAAGb,UAAU,QAAb,SAAsBD,EAAMW,QAAQI,QACpC,wCACO,IACJf,EAAMW,QAAQK,MAAMC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAUnB,EAAMoB,sBAGpB,wBACEhB,QAAS,kBAAMJ,EAAMqB,iBAAiBrB,EAAMW,UAC5CV,UAAU,eAFZ,2BAdsCD,EAAMW,QAAQT,KCgB3CoB,EAhBE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYF,EAAyC,EAAzCA,iBAAkBD,EAAuB,EAAvBA,iBAChD,OACE,yBAASnB,UAAU,yBAAnB,SACGsB,GACCA,EAAWC,SAASC,KAAI,SAACC,GAAD,OACtB,cAAC,EAAD,CACEf,QAASe,EAETN,iBAAkBA,EAClBC,iBAAkBA,GAFbK,EAAKxB,U,2BCNdyB,EAAWC,IAAXD,OAkEOE,EAhES,SAAC,GASlB,IARLrB,EAQI,EARJA,UACAsB,EAOI,EAPJA,cACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAZ,EAII,EAJJA,iBACAa,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACAC,EACI,EADJA,mBAEA,OACE,eAAC,IAAD,CACEpB,MAAM,GACNqB,UAAU,QACVC,UAAU,EACVC,QAASR,EACTS,QAASR,EALX,UAOE,gCACE,mCACE,mBAAG9B,UAAU,mBAAb,8BAEA,sBAAKA,UAAU,cAAf,UACE,cAACuC,EAAA,EAAD,CAAqBpC,QAAS0B,IAE9B,cAAC,IAAD,CACEW,aAAcrB,EACdnB,UAAU,uBACVyC,SAAU,SAACC,GAAD,OAAOR,EAAmBQ,IAHtC,SAKGT,GACCA,EAAcT,KAAI,SAACmB,EAASC,GAC1B,OACE,cAAClB,EAAD,CAAgBmB,MAAOF,EAAvB,SACGA,GADUC,cASzB,qBAAK5C,UAAU,sBAAf,SAAsCO,OAGnB,IAApBwB,EAASe,QACR,gCACE,sBAAK9C,UAAU,eAAf,UACE,yCACA,+BACGgC,EAAYhB,eAAe,QAAS,CACnCC,MAAO,WACPC,SAAUC,SAIhB,wBAAQ4B,KAAK,SAASC,KAAK,QAAQ/C,GAAG,WAAtC,wC,mCCMKgD,EAhEM,SAAC,GAOf,IANLxB,EAMI,EANJA,KACAyB,EAKI,EALJA,KACA/B,EAII,EAJJA,iBACAgC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,mBAEA,OACE,sBAAKrD,UAAU,iBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,gCACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuByB,EAAKX,QAE5B,sBAAMX,QAASgD,EAAf,SACE,cAACG,EAAA,EAAD,SAIJ,sBAAKtD,UAAU,iBAAf,UACE,0EAEA,qBAAKC,GAAG,gBAAR,SACE,qBAAKQ,IAAKgB,EAAKd,UAAWC,IAAI,0BAMtC,sBAAKZ,UAAU,SAAf,UACGoD,GACC,sBAAKpD,UAAU,cAAf,UACE,cAAC,IAAD,CACEuD,KAAM,cAACC,EAAA,EAAD,IACNxD,UAAU,sBACVG,QAAS,WACPiD,EAAqB3B,EAAM,MAI/B,4BAAIA,EAAKgC,WAET,cAAC,IAAD,CACEF,KAAM,cAACG,EAAA,EAAD,IACN1D,UAAU,sBACVG,QAAS,WACPkD,EAAmB5B,SAM3B,+BACGyB,GAAQA,EAAK3B,SAAWE,EAAKV,MAAMC,eAAe,QAAS,CAC1DC,MAAO,WACPC,SAAUC,IACPM,EAAKV,eC3DbW,EAAUC,IAAVD,OA2BQiC,EAzBe,SAAC5D,GAC7B,OACE,cAAC,IAAD,CAEE6D,YAAY,YACZ5D,UAAU,0CACV6D,YAAU,EACVC,iBAAiB,WACjBrB,SAAU,SAACC,GAAD,OAAO3C,EAAMmC,mBAAmBQ,EAAG,qBAC7CqB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,GARlE,SAWGpE,EAAMkC,eACLlC,EAAMkC,cAAcT,KAAI,SAACmB,EAASC,GAChC,OACE,cAAC,EAAD,CAAgBC,MAAOF,EAAS,cAAY,eAA5C,SACGA,GADUC,S,6DCmNVyB,EAxNH,WACV,MAAgCC,oBAAS,GAAzC,mBAAOxC,EAAP,KAAiByC,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOvC,EAAP,KAAiByC,EAAjB,KACA,EAAgDF,mBAAS,OAAzD,mBAAOnD,EAAP,KAAyBsD,EAAzB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAsCL,mBAAS,GAA/C,mBAAOtC,EAAP,KAAoB4C,EAApB,KAEMC,EAAiBC,YAAH,+IAME3D,GAIhB4D,EAAiBD,YAAH,2EAMpB,EAAiCE,YAASH,GAAlChE,EAAR,EAAQA,QAASoE,EAAjB,EAAiBA,MAAO/B,EAAxB,EAAwBA,KAClBgC,EAAcF,YAASD,GAC/BI,QAAQC,IAAIF,GAGV,IAAMG,EAAiBC,uBAAY,WAEjC,IADA,IAAIC,EAAU,EACLC,EAAI,EAAGA,EAAIzD,EAASe,OAAQ0C,IACnCD,GAAWxD,EAASyD,GAAGzE,MAEzB,OAAOwE,IACN,CAACxD,IAEJ0D,qBAAU,WACR,GAAwB,IAApB1D,EAASe,aAAyB4C,IAATxC,EAAoB,CAG/C,IAFA,IAAIyC,EAEK/C,EAAI,EAAGA,EAAIM,EAAK3B,SAASuB,OAAQF,IAExC,IADA,IAAIgD,EAAY1C,EAAK3B,SAASqB,GACrB4C,EAAI,EAAGA,EAAIzD,EAASe,OAAQ0C,IAC/BzD,EAASyD,GAAGvF,KAAO2F,EAAU3F,KAC/B8B,EAASyD,GAAGzE,MAAQgB,EAASyD,GAAG/B,SAAWmC,EAAU7E,MACrD4E,EAAeC,EAAU7E,OAK/B4D,EAAagB,GACbf,EAAeS,QAEhB,CAAClE,EAAkB+B,EAAMnB,EAAUsD,IAEtCI,qBAAU,WACRb,EAAeS,OACd,CAACA,IAEJ,IAQMjE,EAAmB,SAACK,GAAmB,IAAboE,EAAY,uDAAN,EACpC,GAA8D,IAA1D9D,EAAS+D,QAAO,SAACC,GAAD,OAAUA,EAAK9F,KAAOwB,EAAKxB,MAAI6C,OAAc,CAC/D,IAAMkD,EAAQjE,EAASkE,WAAU,SAACC,GAAD,OAAUA,EAAKjG,KAAOwB,EAAKxB,MAE5DuE,EACE2B,IAAOpE,EAAD,eACHiE,EAAQ,CACPI,OAAQ,CACN3C,SAAU1B,EAASiE,GAAOvC,SAAWoC,EACrC9E,OAAQgB,EAASiE,GAAOvC,SAAWoC,GAAOnB,WAK7C,CACL,IAAIjB,EAAW,EACX4C,EAAM,2BAAQ5E,GAAR,IAAcgC,aAExBe,EACE2B,IAAOpE,EAAU,CACfuE,MAAO,CAACD,MAIR3B,IAAcjD,EAAKV,OACrB4D,EAAalD,EAAKV,OAGtBwD,GAAY,IAERpB,EAAqB,SAAC1B,GAC1B,IAAMuE,EAAQjE,EAASkE,WAAU,SAACC,GAAD,OAAUA,EAAKjG,KAAOwB,EAAKxB,MAC5DuE,EACE2B,IAAOpE,EAAU,CACfwE,QAAS,CAAC,CAACP,EAAO,QAKlB3C,EAAqB,SAAC5B,GAC1B,IAAMuE,EAAQjE,EAASkE,WAAU,SAACC,GAAD,OAAUA,EAAKjG,KAAOwB,EAAKxB,MAE3B,IAA7B8B,EAASiE,GAAOvC,SAClBe,EACE2B,IAAOpE,EAAD,aACJwE,QAAS,CAAC,CAACP,EAAO,KACjBA,EAAQ,CACPjF,MAAO,CACLyF,MAAOzE,EAASiE,GAAOvC,SAAW,GAAKiB,OAO/CF,EACE2B,IAAOpE,EAAD,eACHiE,EAAQ,CACPI,OAAQ,CACN3C,SAAU1B,EAASiE,GAAOvC,SAAW,EACrC1C,OAAQgB,EAASiE,GAAOvC,SAAW,GAAKiB,QAQ9C+B,EAAmB,SAACZ,GACxBpB,EAAoBoB,IAGtB,OACE,gCACE,cAAC,EAAD,CACEzF,eA/EiB,WACrBmE,GAAY,IA+ERlE,eAAgB0B,EAASe,SAE3B,0BAAS9C,UAAU,UAAnB,UACE,cAAC,EAAD,CACEmB,iBAAkBA,EAClBZ,UACE,cAAC,EAAD,CACE0B,cACEiD,QACqBQ,IAArBR,EAAYhC,MACZgC,EAAYhC,KAAKhC,SAEnBgB,mBAAoBuE,MAI1B,qBAAKzG,UAAU,qBAAf,SACGa,EACC,qBAAKb,UAAU,UAAf,SACE,cAAC,IAAD,CACEgD,KAAK,QACL,cAAY,UACZ0D,UACE,cAACC,EAAA,EAAD,CACE1F,MAAO,CAAE2F,SAAU,GAAIC,MAAO,WAC9BC,MAAI,QAKV7B,EACF,cAAC,IAAD,CACE8B,OAAO,MACPjG,MAAM,MACNkG,SAAS,iCAGX,cAAC,EAAD,CAAU1F,WAAY4B,EACtB/B,iBAAkBA,EAClBC,iBAAkBA,SAMxB,cAAC,EAAD,CACES,cAlIgB,WACpB0C,GAAY,IAkIRzC,SAAUA,EACVC,SAAUA,EACVZ,iBAAkBA,EAClBa,YAAaA,EACbC,cACEiD,QACqBQ,IAArBR,EAAYhC,MACZgC,EAAYhC,KAAKhC,SAEnBgB,mBAAoBuE,EACpBlG,UAAWwB,EAASP,KAAI,SAACC,GAAD,OACtB,cAAC,EAAD,CACEA,KAAMA,EAENyB,KAAMA,EACN/B,iBAAkBA,EAClBgC,mBAAoBA,EACpBC,qBAAsBhC,EACtBiC,mBAAoBA,GALf5B,EAAKxB,aC9MPgH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCLRQ,EAAWC,YAAe,CAC9BC,IAAI,kDAiBSC,EAdA,IAAIC,IAAa,CAC9BC,KAAML,EACNM,MAAO,IAAIC,IAEXC,eAAgB,CACdC,MAAO,CACLC,YAAa,OAEfC,OAAQ,CACND,YAAa,UCFnBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBZ,OAAQA,EAAxB,SACA,cAAC,EAAD,QAGFa,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.25031981.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header__container\">\r\n      <div className=\"header__inner header__left\">\r\n        <p id=\"header__title\">Lumin</p>\r\n\r\n        <div className=\"header__inner nav\">\r\n          <p>Shop</p>\r\n          <p>Learn</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header__inner header__right\">\r\n        <span id=\"account__label\">Account</span>\r\n\r\n        <div id=\"account__cart\">\r\n          <ShoppingCartOutlined\r\n            id=\"cart\"\r\n            onClick={() => props.openDrawerCart()}\r\n          />\r\n          {props.noOfItemInCart !== 0 && (\r\n            <p id=\"account__cart__no\">{props.noOfItemInCart}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst ContentHeader = (props) => {\r\n  return (\r\n    <div className=\"contentHeader__container\">\r\n      <div className=\"contentHeader__container__inner\">\r\n        <div>\r\n          <p id=\"contentHeader__container__inner_title\">All Products</p>\r\n          <span>A 360 look at Lumin</span>\r\n        </div>\r\n\r\n        <div>{props.component}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from \"react\";\r\nconst ProductItem = (props) => {\r\n  return (\r\n    <div className=\"productItem__item\" key={props.content.id} data-testid=\"Product-Item\">\r\n      {/* image */}\r\n      <div className=\"img__container\">\r\n        <img src={props.content.image_url} alt=\"image_url\" loading=\"lazy\" />\r\n      </div>\r\n\r\n      <p className=\"title\">{props.content.title}</p>\r\n      <span>\r\n        From{\" \"}\r\n        {props.content.price.toLocaleString(\"en-US\", {\r\n          style: \"currency\",\r\n          currency: props.selectedCurrency,\r\n        })}\r\n      </span>\r\n      <button\r\n        onClick={() => props.addProductToCart(props.content)}\r\n        className=\"btn__addCart\"\r\n      >\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\nimport ProductItem from \"./productItems\";\r\n\r\nconst Products = ({ productArr, addProductToCart, selectedCurrency }) => {\r\n  return (\r\n    <section className=\"productItem__container\">\r\n      {productArr &&\r\n        productArr.products.map((item) => (\r\n          <ProductItem\r\n            content={item}\r\n            key={item.id}\r\n            selectedCurrency={selectedCurrency}\r\n            addProductToCart={addProductToCart}\r\n          />\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport { Drawer, Select } from \"antd\";\r\nimport { RightCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst DrawerComponent = ({\r\n  component,\r\n  onCloseDrawer,\r\n  openCart,\r\n  cartList,\r\n  selectedCurrency,\r\n  totalAmount,\r\n  countriesCode,\r\n  onSelectedCurrency,\r\n}) => {\r\n  return (\r\n    <Drawer\r\n      title=\"\"\r\n      placement=\"right\"\r\n      closable={false}\r\n      onClose={onCloseDrawer}\r\n      visible={openCart}\r\n    >\r\n      <div>\r\n        <header>\r\n          <p className=\"cart_header_text\">My Shopping Cart</p>\r\n\r\n          <div className=\"cart_header\">\r\n            <RightCircleOutlined onClick={onCloseDrawer} />\r\n\r\n            <Select\r\n              defaultValue={selectedCurrency}\r\n              className=\"cart-select-currency\"\r\n              onChange={(e) => onSelectedCurrency(e)}\r\n            >\r\n              {countriesCode &&\r\n                countriesCode.map((country, i) => {\r\n                  return (\r\n                    <Option key={i} value={country}>\r\n                      {country}\r\n                    </Option>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"cart-list-container\">{component}</div>\r\n      </div>\r\n      {/* footer drawer */}\r\n      {cartList.length !== 0 && (\r\n        <div>\r\n          <div className=\"checkout-btn\">\r\n            <p>Subtotal</p>\r\n            <span>\r\n              {totalAmount.toLocaleString(\"en-US\", {\r\n                style: \"currency\",\r\n                currency: selectedCurrency,\r\n              })}\r\n            </span>\r\n          </div>\r\n          <button type=\"button\" size=\"large\" id=\"checkout\">\r\n            Proceed to checkout\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\nexport default DrawerComponent;\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { PlusOutlined, MinusOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst CartListItem = ({\r\n  item,\r\n  data,\r\n  selectedCurrency,\r\n  removeItemFromCart,\r\n  increaseItemQuantity,\r\n  reduceItemFromCart,\r\n}) => {\r\n  return (\r\n    <div className=\"cart-list-item\">\r\n      <div className=\"content\">\r\n        <div>\r\n          <div className=\"cart-item-desc\">\r\n            <h4 className=\"title\">{item.title}</h4>\r\n\r\n            <span onClick={removeItemFromCart}>\r\n              <CloseOutlined />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"cart-item-desc\">\r\n            <p>Two month supply shipped every two months</p>\r\n            {/* img */}\r\n            <div id=\"cart-item-img\">\r\n              <img src={item.image_url} alt=\"product_img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"action\">\r\n        {increaseItemQuantity && (\r\n          <div className=\"btn-actions\">\r\n            <Button\r\n              icon={<PlusOutlined />}\r\n              className=\"btn-mr btn-noBorder\"\r\n              onClick={() => {\r\n                increaseItemQuantity(item, 1);\r\n              }}\r\n            />\r\n\r\n            <p>{item.quantity}</p>\r\n\r\n            <Button\r\n              icon={<MinusOutlined />}\r\n              className=\"btn-ml btn-noBorder\"\r\n              onClick={() => {\r\n                reduceItemFromCart(item);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <span>\r\n          {data && data.products ? item.price.toLocaleString(\"en-US\", {\r\n            style: \"currency\",\r\n            currency: selectedCurrency,\r\n          }) : item.price}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartListItem;\r\n","import { Select } from \"antd\";\r\n\r\nconst {Option} = Select;\r\n\r\nconst FilterSelectComponent = (props) => {\r\n  return (\r\n    <Select\r\n    \r\n      placeholder=\"Filter by\"\r\n      className=\"contentHeader__container__inner__filter\"\r\n      showSearch\r\n      optionFilterProp=\"children\"\r\n      onChange={(e) => props.onSelectedCurrency(e, \"selectedCurrency\")}\r\n      filterOption={(input, option) =>\r\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {props.countriesCode &&\r\n        props.countriesCode.map((country, i) => {\r\n          return (\r\n            <Option key={i} value={country} data-testid=\"filterSelect\">\r\n              {country}\r\n            </Option>\r\n          );\r\n        })}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default FilterSelectComponent;","import React, { useState, useEffect, useCallback } from \"react\";\n// ui component\nimport Header from \"../../components/header\";\nimport ContentHeader from \"../../components/contentHeader\";\nimport Products from \"../../components/products\";\nimport DrawerComponent from \"../../components/drawer\";\nimport CartListItem from \"../../components/cartItem\";\nimport FilterSelectComponent from \"../../components/filterCurrency\";\n//\nimport update from \"immutability-helper\";\nimport { Spin, Result } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n// utility\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst App = () => {\n  const [openCart, setOpenCart] = useState(false);\n  const [cartList, setCartList] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState(\"USD\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  const FETCH_PRODUCTS = gql`\n  query Products {\n    products {\n      id\n      title\n      image_url\n      price(currency: ${selectedCurrency})\n    }\n  }\n`;\n  const FETCH_CURRENCY = gql`\n    query Currency {\n      currency\n    }\n  `;\n\n  const { loading, error, data } = useQuery(FETCH_PRODUCTS);\n  const currencyRes = useQuery(FETCH_CURRENCY);\nconsole.log(currencyRes);\n\n  // console.log(currencyRes);\n  const getTotalAmount = useCallback(() => {\n    let tAmount = 0;\n    for (let x = 0; x < cartList.length; x++) {\n      tAmount += cartList[x].price;\n    }\n    return tAmount;\n  }, [cartList]);\n\n  useEffect(() => {\n    if (cartList.length !== 0 && data !== undefined) {\n      let newItemPrice;\n\n      for (let i = 0; i < data.products.length; i++) {\n        let product_i = data.products[i];\n        for (let x = 0; x < cartList.length; x++) {\n          if (cartList[x].id === product_i.id) {\n            cartList[x].price = cartList[x].quantity * product_i.price;\n            newItemPrice = product_i.price;\n          }\n        }\n      }\n\n      setItemPrice(newItemPrice);\n      setTotalAmount(getTotalAmount());\n    }\n  }, [selectedCurrency, data, cartList, getTotalAmount]);\n\n  useEffect(() => {\n    setTotalAmount(getTotalAmount());\n  }, [getTotalAmount]);\n\n  const onCloseDrawer = () => {\n    setOpenCart(false);\n  };\n\n  const openDrawerCart = () => {\n    setOpenCart(true);\n  };\n\n  const addProductToCart = (item, val = 1) => {\n    if (cartList.filter((list) => list.id === item.id).length !== 0) {\n      const index = cartList.findIndex((cart) => cart.id === item.id);\n\n      setCartList(\n        update(cartList, {\n          [index]: {\n            $merge: {\n              quantity: cartList[index].quantity + val,\n              price: (cartList[index].quantity + val) * itemPrice,\n            },\n          },\n        })\n      );\n    } else {\n      let quantity = 1;\n      let newObj = { ...item, quantity };\n\n      setCartList(\n        update(cartList, {\n          $push: [newObj],\n        })\n      );\n\n      if (itemPrice !== item.price) {\n        setItemPrice(item.price);\n      }\n    }\n    setOpenCart(true);\n  };\n  const removeItemFromCart = (item) => {\n    const index = cartList.findIndex((cart) => cart.id === item.id);\n    setCartList(\n      update(cartList, {\n        $splice: [[index, 1]],\n      })\n    );\n  };\n\n  const reduceItemFromCart = (item) => {\n    const index = cartList.findIndex((cart) => cart.id === item.id);\n    // if the current quantity is 1 remove item\n    if (cartList[index].quantity === 1) {\n      setCartList(\n        update(cartList, {\n          $splice: [[index, 1]],\n          [index]: {\n            price: {\n              $set: (cartList[index].quantity - 1) * itemPrice,\n            },\n          },\n        })\n      );\n    } else {\n      // substract the quantity\n      setCartList(\n        update(cartList, {\n          [index]: {\n            $merge: {\n              quantity: cartList[index].quantity - 1,\n              price: (cartList[index].quantity - 1) * itemPrice,\n            },\n          },\n        })\n      );\n    }\n  };\n\n  const onFilterCurrency = (val) => {\n    setSelectedCurrency(val);\n  };\n\n  return (\n    <div>\n      <Header\n        openDrawerCart={openDrawerCart}\n        noOfItemInCart={cartList.length}\n      />\n      <section className=\"content\">\n        <ContentHeader\n          selectedCurrency={selectedCurrency}\n          component={\n            <FilterSelectComponent\n              countriesCode={\n                currencyRes &&\n                currencyRes.data !== undefined &&\n                currencyRes.data.currency\n              }\n              onSelectedCurrency={onFilterCurrency}\n            />\n          }\n        />\n        <div className=\"product__container\">\n          {loading ? (\n            <div className=\"spinner\">\n              <Spin\n                size=\"small\"\n                data-testid=\"spinner\"\n                indicator={\n                  <LoadingOutlined\n                    style={{ fontSize: 24, color: \"#00A3A1\" }}\n                    spin\n                  />\n                }\n              />\n            </div>\n          ) : error ? (\n            <Result\n              status=\"500\"\n              title=\"500\"\n              subTitle=\"Sorry, something went wrong.\"\n            />\n          ) : (\n            <Products productArr={data} \n            selectedCurrency={selectedCurrency}\n            addProductToCart={addProductToCart}\n            />\n          )}\n        </div>\n      </section>\n      {/* drawer */}\n      <DrawerComponent\n        onCloseDrawer={onCloseDrawer}\n        openCart={openCart}\n        cartList={cartList}\n        selectedCurrency={selectedCurrency}\n        totalAmount={totalAmount}\n        countriesCode={\n          currencyRes &&\n          currencyRes.data !== undefined &&\n          currencyRes.data.currency\n        }\n        onSelectedCurrency={onFilterCurrency}\n        component={cartList.map((item) => (\n          <CartListItem\n            item={item}\n            key={item.id}\n            data={data}\n            selectedCurrency={selectedCurrency}\n            removeItemFromCart={removeItemFromCart}\n            increaseItemQuantity={addProductToCart}\n            reduceItemFromCart={reduceItemFromCart}\n          />\n        ))}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: `https://pangaea-interviews.now.sh/api/graphql`,\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache(),\r\n\r\n  defaultOptions: {\r\n    query: {\r\n      errorPolicy: \"all\",\r\n    },\r\n    mutate: {\r\n      errorPolicy: \"all\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./config/client\";\n\n// if (process.env.REACT_APP_API_MOCKING === \"enabled\") {\n//   const { worker } = require(\"./mocks/browser\");\n//   worker.start();\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}